<?php

namespace tool;
public class GenerateAst
{
    public function main($args) {
        if ($args != 1) {
            \merp\clsMain::error(1, "Usage: generateAst [output dir]");
            exit(64);
        }
        $outputDir = $args[1];
        $this->defineAst($outputDir, "Expr", [
            "Binary : Expr left, Token operator, Expr right",
            "Grouping : Expr expression",
            "Literal : Object Value",
            "Unary : Token operator, Expr right"
        ]);
    }

    public function defineAst($outputDir, $basename, $types) {
        $path = $outputDir . "/" . $basename . ".php";
        $fileContent = "<?php\n\n";
        $fileContent .= "//autogenerated code \n";
        $fileContent .= "abstract class" . $basename . "{\n";

        $fileContent .= "}\n";
        foreach ($types as $type) {
            $parts = explode(':',$type);
            $classname = trim($parts[0]);
            $fields = trim($parts[1]);
            $fileContent .= "\n class" . $classname .  " extends " . $basename . "{\n";
            $properties = explode(",", $fields);
            foreach ($properties as $property) {
                $propParts = explode(" ", $property);
                $fileContent .= "    public $" . $propParts[1];
            }
            $fileContent .= "}\n";

        }

        file_put_contents($path,$fileContent);
    }
}