<?php

namespace classes;
//autogenerated code 
interface Accept {
   public function accept(Visitor $visitor);
}

   interface Visitor { 
      function visitBinaryExpr($Binaryexpr);
      function visitGroupingExpr($Groupingexpr);
      function visitLiteralExpr($Literalexpr);
      function visitUnaryExpr($Unaryexpr);
   }
abstract class Expr {
}

    class Binary extends Expr implements Accept {
       public $left;
       public $Token;
       public $Expr;
       public function accept(Visitor $visitor) {
           $visitor->visitBinaryExpr($this);
       }
   }

    class Grouping extends Expr implements Accept {
       public $expression;
       public function accept(Visitor $visitor) {
           $visitor->visitGroupingExpr($this);
       }
   }

    class Literal extends Expr implements Accept {
       public $Value;
       public function accept(Visitor $visitor) {
           $visitor->visitLiteralExpr($this);
       }
   }

    class Unary extends Expr implements Accept {
       public $operator;
       public $Expr;
       public function accept(Visitor $visitor) {
           $visitor->visitUnaryExpr($this);
       }
   }
